plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

//lombok 설정 추가 시작
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
//lombok 설정 추가 끝

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	//web 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// JSR-330 Provider
	// 프로토타입 스코프 - 싱글톤 빈과 함께 사용시 Provider로 문제 해결법 => 스프링컨테이너에 의존적X방법
	implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
	
	//lombok 라이브러리 추가 시작
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
 	testAnnotationProcessor 'org.projectlombok:lombok'
	 //lombok 라이브러리 추가 끝
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// JUnit5
    testImplementation("org.junit.platform:junit-platform-launcher:1.5.2") 
	testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
}
	
tasks.named('test') {
	useJUnitPlatform()
}
